// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TopCourses.Infrastructure.Data;

#nullable disable

namespace TopCourses.Infrastructure.Migrations
{
    [DbContext(typeof(TopCoursesDbContext))]
    [Migration("20221217171802_dbSeed")]
    partial class dbSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CourseShoppingCart", b =>
                {
                    b.Property<int>("ShoppingCartCoursesId")
                        .HasColumnType("int");

                    b.Property<int>("ShoppingCartId")
                        .HasColumnType("int");

                    b.HasKey("ShoppingCartCoursesId", "ShoppingCartId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("CourseShoppingCart");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "bd2e6c29-be4d-45ea-9fee-a0cffdf530d4",
                            ConcurrencyStamp = "bd2e6c29-be4d-45ea-9fee-a0cffdf530d4",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "dea12856-c198-4129-b3f3-b893d8395082",
                            RoleId = "bd2e6c29-be4d-45ea-9fee-a0cffdf530d4"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TopCourses.Infrastructure.Data.Identity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<byte[]>("ProfileImage")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShoppingCartId")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "dea12856-c198-4129-b3f3-b893d8395082",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "dbd1b43e-be5b-4d39-a191-99d971f70457",
                            Email = "admin@abv.bg",
                            EmailConfirmed = false,
                            FirstName = "Admin",
                            IsDeleted = false,
                            LastName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@ABV.BG",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEEWEm8K2RwIuw+/AnPvfGKkzQuwCep6B1+yYJ1QObKTQghXaol+QKf42nWG4kYqi8A==",
                            PhoneNumberConfirmed = false,
                            ProfileImage = new byte[0],
                            SecurityStamp = "1ca9ad8c-2db6-449e-b7de-a77c6fc032be",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = "6d5800ce-d726-4fc8-83d9-d6b3ac1f591e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b0cb7f2c-184a-41aa-a746-567d9ab4ec09",
                            Email = "user@abv.bg",
                            EmailConfirmed = false,
                            FirstName = "User",
                            IsDeleted = false,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER@ABV.BG",
                            NormalizedUserName = "REGULARUSER",
                            PasswordHash = "AQAAAAEAACcQAAAAEJK3Mlg+EEVlwsLV55waZQm/qW+JwB/yzn1gIdO6KyhsOnIc9ZXnvmUcbtGB/2TXMQ==",
                            PhoneNumberConfirmed = false,
                            ProfileImage = new byte[0],
                            SecurityStamp = "4fb23e14-1f8e-4f0d-876a-d11c00647a9d",
                            TwoFactorEnabled = false,
                            UserName = "regularUser"
                        });
                });

            modelBuilder.Entity("TopCourses.Infrastructure.Data.Models.ApplicationFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("FileLength")
                        .HasColumnType("bigint");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SourceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TopicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("TopCourses.Infrastructure.Data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Title = "Development"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Title = "IT and Software"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Title = "Photography and video"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Title = "Design"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            ParentId = 1,
                            Title = "Web Development"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            ParentId = 1,
                            Title = "Data Science"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            ParentId = 1,
                            Title = "Mobile Development"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            ParentId = 2,
                            Title = "Hardware"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            ParentId = 2,
                            Title = "Network and Securiry"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            ParentId = 2,
                            Title = "Operating Systems and Servers"
                        },
                        new
                        {
                            Id = 11,
                            IsDeleted = false,
                            ParentId = 3,
                            Title = "Photography"
                        },
                        new
                        {
                            Id = 12,
                            IsDeleted = false,
                            ParentId = 3,
                            Title = "Video Design"
                        },
                        new
                        {
                            Id = 13,
                            IsDeleted = false,
                            ParentId = 4,
                            Title = "Web Design"
                        },
                        new
                        {
                            Id = 14,
                            IsDeleted = false,
                            ParentId = 4,
                            Title = "Game Design"
                        });
                });

            modelBuilder.Entity("TopCourses.Infrastructure.Data.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("Goals")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Requirements")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Subtitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("OrderId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedOn = new DateTime(2022, 12, 17, 19, 18, 2, 135, DateTimeKind.Local).AddTicks(1327),
                            CreatorId = "6d5800ce-d726-4fc8-83d9-d6b3ac1f591e",
                            Description = "this is very long description.....",
                            Goals = "ikasncialsuhcasuicvauivavkajsnvanasc",
                            Image = new byte[0],
                            IsApproved = true,
                            IsDeleted = false,
                            LanguageId = 1,
                            Level = 0,
                            Price = 99.99m,
                            Requirements = "ikasncialsuhcasuicvauivavkajsnvanasc",
                            SubCategoryId = 5,
                            Subtitle = "The Complete C# Web Devolopment Bootcamp",
                            Title = "The Complete Web Devolopment Bootcamp"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedOn = new DateTime(2022, 12, 17, 19, 18, 2, 135, DateTimeKind.Local).AddTicks(1367),
                            CreatorId = "6d5800ce-d726-4fc8-83d9-d6b3ac1f591e",
                            Description = "this is very long description.....",
                            Goals = "ikasncialsuhcasuicvauivavkajsnvanasc",
                            Image = new byte[0],
                            IsApproved = true,
                            IsDeleted = false,
                            LanguageId = 1,
                            Level = 0,
                            Price = 75.99m,
                            Requirements = "ikasncialsuhcasuicvauivavkajsnvanasc",
                            SubCategoryId = 5,
                            Subtitle = "The Best React Course",
                            Title = "The Complete React Course"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedOn = new DateTime(2022, 12, 17, 19, 18, 2, 135, DateTimeKind.Local).AddTicks(1371),
                            CreatorId = "6d5800ce-d726-4fc8-83d9-d6b3ac1f591e",
                            Description = "this is very long description.....",
                            Goals = "ikasncialsuhcasuicvauivavkajsnvanasc",
                            Image = new byte[0],
                            IsApproved = true,
                            IsDeleted = false,
                            LanguageId = 2,
                            Level = 0,
                            Price = 75.99m,
                            Requirements = "ikasncialsuhcasuicvauivavkajsnvanasc",
                            SubCategoryId = 6,
                            Subtitle = "The Best Angular Course",
                            Title = "The Complete Angular Course"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CreatedOn = new DateTime(2022, 12, 17, 19, 18, 2, 135, DateTimeKind.Local).AddTicks(1374),
                            CreatorId = "6d5800ce-d726-4fc8-83d9-d6b3ac1f591e",
                            Description = "this is very long description.....",
                            Goals = "ikasncialsuhcasuicvauivavkajsnvanasc",
                            Image = new byte[0],
                            IsApproved = true,
                            IsDeleted = false,
                            LanguageId = 2,
                            Level = 0,
                            Price = 75.99m,
                            Requirements = "ikasncialsuhcasuicvauivavkajsnvanasc",
                            SubCategoryId = 6,
                            Subtitle = "The Best Data Structures Course",
                            Title = "The Complete Data Structures Course"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            CreatedOn = new DateTime(2022, 12, 17, 19, 18, 2, 135, DateTimeKind.Local).AddTicks(1378),
                            CreatorId = "6d5800ce-d726-4fc8-83d9-d6b3ac1f591e",
                            Description = "this is very long description.....",
                            Goals = "ikasncialsuhcasuicvauivavkajsnvanasc",
                            Image = new byte[0],
                            IsApproved = true,
                            IsDeleted = false,
                            LanguageId = 2,
                            Level = 0,
                            Price = 75.99m,
                            Requirements = "ikasncialsuhcasuicvauivavkajsnvanasc",
                            SubCategoryId = 6,
                            Subtitle = "The Best Mobile Development Course",
                            Title = "The Complete Mobile Development Course"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            CreatedOn = new DateTime(2022, 12, 17, 19, 18, 2, 135, DateTimeKind.Local).AddTicks(1383),
                            CreatorId = "6d5800ce-d726-4fc8-83d9-d6b3ac1f591e",
                            Description = "this is very long description.....",
                            Goals = "ikasncialsuhcasuicvauivavkajsnvanasc",
                            Image = new byte[0],
                            IsApproved = true,
                            IsDeleted = false,
                            LanguageId = 1,
                            Level = 0,
                            Price = 75.99m,
                            Requirements = "ikasncialsuhcasuicvauivavkajsnvanasc",
                            SubCategoryId = 8,
                            Subtitle = "The Best Mobile Development Course",
                            Title = "The Complete Mobile Development Course"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            CreatedOn = new DateTime(2022, 12, 17, 19, 18, 2, 135, DateTimeKind.Local).AddTicks(1386),
                            CreatorId = "6d5800ce-d726-4fc8-83d9-d6b3ac1f591e",
                            Description = "this is very long description.....",
                            Goals = "ikasncialsuhcasuicvauivavkajsnvanasc",
                            Image = new byte[0],
                            IsApproved = true,
                            IsDeleted = false,
                            LanguageId = 1,
                            Level = 0,
                            Price = 75.99m,
                            Requirements = "ikasncialsuhcasuicvauivavkajsnvanasc",
                            SubCategoryId = 9,
                            Subtitle = "The Best Mobile Development Course",
                            Title = "The Complete Mobile Development Course"
                        });
                });

            modelBuilder.Entity("TopCourses.Infrastructure.Data.Models.CourseApplicationUser", b =>
                {
                    b.Property<string>("StudentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("CourseApplicationUser");
                });

            modelBuilder.Entity("TopCourses.Infrastructure.Data.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Title = "English"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Title = "Bulgarian"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Title = "French"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Title = "Spanish"
                        });
                });

            modelBuilder.Entity("TopCourses.Infrastructure.Data.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TopCourses.Infrastructure.Data.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfPublication")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("TopCourses.Infrastructure.Data.Models.ShoppingCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("TopCourses.Infrastructure.Data.Models.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ResourceId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("ResourceId");

                    b.ToTable("Topics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Description = "very long description...",
                            IsDeleted = false,
                            Title = "Introduction"
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 1,
                            Description = "very long description...",
                            IsDeleted = false,
                            Title = "First Topic"
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 2,
                            Description = "very long description...",
                            IsDeleted = false,
                            Title = "Introduction"
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 2,
                            Description = "very long description...",
                            IsDeleted = false,
                            Title = "First Topic"
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 3,
                            Description = "very long description...",
                            IsDeleted = false,
                            Title = "Introduction"
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 3,
                            Description = "very long description...",
                            IsDeleted = false,
                            Title = "First Topic"
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 4,
                            Description = "very long description...",
                            IsDeleted = false,
                            Title = "Introduction"
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 4,
                            Description = "very long description...",
                            IsDeleted = false,
                            Title = "First Topic"
                        },
                        new
                        {
                            Id = 9,
                            CourseId = 5,
                            Description = "very long description...",
                            IsDeleted = false,
                            Title = "Introduction"
                        },
                        new
                        {
                            Id = 10,
                            CourseId = 5,
                            Description = "very long description...",
                            IsDeleted = false,
                            Title = "First Topic"
                        },
                        new
                        {
                            Id = 11,
                            CourseId = 6,
                            Description = "very long description...",
                            IsDeleted = false,
                            Title = "Introduction"
                        },
                        new
                        {
                            Id = 12,
                            CourseId = 6,
                            Description = "very long description...",
                            IsDeleted = false,
                            Title = "First Topic"
                        },
                        new
                        {
                            Id = 13,
                            CourseId = 7,
                            Description = "very long description...",
                            IsDeleted = false,
                            Title = "Introduction"
                        },
                        new
                        {
                            Id = 14,
                            CourseId = 7,
                            Description = "very long description...",
                            IsDeleted = false,
                            Title = "First Topic"
                        });
                });

            modelBuilder.Entity("TopCourses.Infrastructure.Data.Models.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("Video");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Title = "Intro",
                            TopicId = 1,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Title = "First Video",
                            TopicId = 1,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Title = "Other Video",
                            TopicId = 1,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Title = "Intro to Topic",
                            TopicId = 2,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Title = "First Video of topic",
                            TopicId = 2,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Title = "Other Video",
                            TopicId = 2,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Title = "Intro",
                            TopicId = 3,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Title = "First Video",
                            TopicId = 3,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Title = "Other Video",
                            TopicId = 3,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Title = "Intro to Topic",
                            TopicId = 4,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 11,
                            IsDeleted = false,
                            Title = "First Video of topic",
                            TopicId = 4,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 12,
                            IsDeleted = false,
                            Title = "Other Video",
                            TopicId = 4,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 13,
                            IsDeleted = false,
                            Title = "Intro",
                            TopicId = 5,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 14,
                            IsDeleted = false,
                            Title = "First Video",
                            TopicId = 5,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 15,
                            IsDeleted = false,
                            Title = "Other Video",
                            TopicId = 5,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 16,
                            IsDeleted = false,
                            Title = "Intro to Topic",
                            TopicId = 6,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 17,
                            IsDeleted = false,
                            Title = "First Video of topic",
                            TopicId = 6,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 18,
                            IsDeleted = false,
                            Title = "Other Video",
                            TopicId = 6,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 19,
                            IsDeleted = false,
                            Title = "Intro",
                            TopicId = 7,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 20,
                            IsDeleted = false,
                            Title = "First Video",
                            TopicId = 7,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 21,
                            IsDeleted = false,
                            Title = "Other Video",
                            TopicId = 7,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 22,
                            IsDeleted = false,
                            Title = "Intro to Topic",
                            TopicId = 8,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 23,
                            IsDeleted = false,
                            Title = "First Video of topic",
                            TopicId = 8,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 24,
                            IsDeleted = false,
                            Title = "Other Video",
                            TopicId = 8,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 25,
                            IsDeleted = false,
                            Title = "Intro",
                            TopicId = 9,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 26,
                            IsDeleted = false,
                            Title = "First Video",
                            TopicId = 9,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 27,
                            IsDeleted = false,
                            Title = "Other Video",
                            TopicId = 9,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 28,
                            IsDeleted = false,
                            Title = "Intro to Topic",
                            TopicId = 10,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 29,
                            IsDeleted = false,
                            Title = "First Video of topic",
                            TopicId = 10,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 30,
                            IsDeleted = false,
                            Title = "Other Video",
                            TopicId = 10,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 31,
                            IsDeleted = false,
                            Title = "Intro",
                            TopicId = 9,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 32,
                            IsDeleted = false,
                            Title = "First Video",
                            TopicId = 9,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 33,
                            IsDeleted = false,
                            Title = "Other Video",
                            TopicId = 9,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 34,
                            IsDeleted = false,
                            Title = "Intro to Topic",
                            TopicId = 10,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 35,
                            IsDeleted = false,
                            Title = "First Video of topic",
                            TopicId = 10,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 36,
                            IsDeleted = false,
                            Title = "Other Video",
                            TopicId = 10,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 37,
                            IsDeleted = false,
                            Title = "Intro",
                            TopicId = 11,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 38,
                            IsDeleted = false,
                            Title = "First Video",
                            TopicId = 11,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 39,
                            IsDeleted = false,
                            Title = "Other Video",
                            TopicId = 11,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 40,
                            IsDeleted = false,
                            Title = "Intro to Topic",
                            TopicId = 12,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 41,
                            IsDeleted = false,
                            Title = "First Video of topic",
                            TopicId = 12,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        },
                        new
                        {
                            Id = 42,
                            IsDeleted = false,
                            Title = "Other Video",
                            TopicId = 12,
                            Url = "https://www.youtube.com/embed/P-uxPyF9Icg?autoplay=1"
                        });
                });

            modelBuilder.Entity("CourseShoppingCart", b =>
                {
                    b.HasOne("TopCourses.Infrastructure.Data.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("ShoppingCartCoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TopCourses.Infrastructure.Data.Models.ShoppingCart", null)
                        .WithMany()
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("TopCourses.Infrastructure.Data.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("TopCourses.Infrastructure.Data.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TopCourses.Infrastructure.Data.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("TopCourses.Infrastructure.Data.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TopCourses.Infrastructure.Data.Models.ApplicationFile", b =>
                {
                    b.HasOne("TopCourses.Infrastructure.Data.Models.Topic", null)
                        .WithMany("Files")
                        .HasForeignKey("TopicId");
                });

            modelBuilder.Entity("TopCourses.Infrastructure.Data.Models.Category", b =>
                {
                    b.HasOne("TopCourses.Infrastructure.Data.Models.Category", "Parent")
                        .WithMany("SubCategory")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("TopCourses.Infrastructure.Data.Models.Course", b =>
                {
                    b.HasOne("TopCourses.Infrastructure.Data.Models.Category", "Category")
                        .WithMany("Courses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TopCourses.Infrastructure.Data.Identity.ApplicationUser", "Creator")
                        .WithMany("CoursesCreated")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TopCourses.Infrastructure.Data.Models.Language", "Language")
                        .WithMany("Courses")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TopCourses.Infrastructure.Data.Models.Order", null)
                        .WithMany("Courses")
                        .HasForeignKey("OrderId");

                    b.HasOne("TopCourses.Infrastructure.Data.Models.Category", "SubCategory")
                        .WithMany("CoursesSubCategories")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Creator");

                    b.Navigation("Language");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("TopCourses.Infrastructure.Data.Models.CourseApplicationUser", b =>
                {
                    b.HasOne("TopCourses.Infrastructure.Data.Models.Course", "Course")
                        .WithMany("Students")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TopCourses.Infrastructure.Data.Identity.ApplicationUser", "Student")
                        .WithMany("CoursesEnrolled")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("TopCourses.Infrastructure.Data.Models.Order", b =>
                {
                    b.HasOne("TopCourses.Infrastructure.Data.Identity.ApplicationUser", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("TopCourses.Infrastructure.Data.Models.Review", b =>
                {
                    b.HasOne("TopCourses.Infrastructure.Data.Models.Course", "Course")
                        .WithMany("Reviews")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TopCourses.Infrastructure.Data.Identity.ApplicationUser", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TopCourses.Infrastructure.Data.Models.ShoppingCart", b =>
                {
                    b.HasOne("TopCourses.Infrastructure.Data.Identity.ApplicationUser", "User")
                        .WithOne("ShoppingCart")
                        .HasForeignKey("TopCourses.Infrastructure.Data.Models.ShoppingCart", "UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("User");
                });

            modelBuilder.Entity("TopCourses.Infrastructure.Data.Models.Topic", b =>
                {
                    b.HasOne("TopCourses.Infrastructure.Data.Models.Course", "Course")
                        .WithMany("Curriculum")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TopCourses.Infrastructure.Data.Models.ApplicationFile", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId");

                    b.Navigation("Course");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("TopCourses.Infrastructure.Data.Models.Video", b =>
                {
                    b.HasOne("TopCourses.Infrastructure.Data.Models.Topic", "Topic")
                        .WithMany("Videos")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("TopCourses.Infrastructure.Data.Identity.ApplicationUser", b =>
                {
                    b.Navigation("CoursesCreated");

                    b.Navigation("CoursesEnrolled");

                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("TopCourses.Infrastructure.Data.Models.Category", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("CoursesSubCategories");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("TopCourses.Infrastructure.Data.Models.Course", b =>
                {
                    b.Navigation("Curriculum");

                    b.Navigation("Reviews");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("TopCourses.Infrastructure.Data.Models.Language", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("TopCourses.Infrastructure.Data.Models.Order", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("TopCourses.Infrastructure.Data.Models.Topic", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("Videos");
                });
#pragma warning restore 612, 618
        }
    }
}
